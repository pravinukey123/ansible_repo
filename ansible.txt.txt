24) lineinfile module ------  This is primarily useful when you want to change a single line in a file only. 
					It will Manage the line in text file, we can add/remove/replace the line in that file 

---
- name: playbook for lineinfileModule
  hosts: all
  become: true
  tasks:

      - name: new task for file adding and it content
        lineinfile: 
          state: present    
          dest: /mnt/thor.txt
          line: hello spider

#Note: firstly we have to create spider.txt file in Node, after that run the playbook, it means line added in already created file.

      - name: new task for file adding and it content
        lineinfile: 
          state: absent    
          dest: /mnt/thor.txt
          line: hello thor
				     

25) Find Module------- it will find "file_type" from perticular location, we have to mentione their path of file

- name: find playbook
  hosts: all
  become: true
  tasks: 
    - name:
      find:
        path: /var/log  #<where to find>
        file_type: file
        pattern: "*" 
      register: out

    - debug:
        msg={{out}}
-------------------------------------------------------
# get details of path files
    - debug:       
        msg={{item.path}} 
      loop: "{{out.files}}"
------------------------------------------------------
# remove details of file stored in register
    - name: remove the files
      file:
        path: "{{item.path}}"
        state: absent
      loop: "{{out.files}}"


26) When condition with "and" ----In"and condition" if any of the 2 given condiion when 1 condition will be false then whole task will be skipped

- name: simple when condition
  hosts: all
  become: true
  tasks:
    - name: print the task
      debug:
       msg: "Distribution name of Linux: {{ansible_distribution}}"
      when: ansible_distribution == "centos" and ansible_distribution == "Ubuntu"


27) When condition with "or" ----In"or condition" if any of the 2 given condiion when 1 condition will be false it will not skip the next task --> next task will runs smoothly

- name: simple when condition
  hosts: all
  become: true
  tasks:
    - name: print the task
      debug:
       msg: "Distribution name of Linux: {{ansible_distribution}}"
      when: ansible_distribution == "centos" or ansible_distribution == "Ubuntu"
